USE `reporting`;

DROP VIEW IF EXISTS `CRITICAL_WINWATCH`;
DROP VIEW IF EXISTS `CRITICAL_SERCHIO`;
DROP VIEW IF EXISTS `CRITICAL`;
DROP VIEW IF EXISTS `REPORT`;

CREATE VIEW `CRITICAL_WINWATCH` AS
SELECT
DATE(Data) DateOnly,
CONCAT_WS(' ',Messaggio,'PULSAR',RIGHT(Centrale,1),Evento) Critical,
SUM(contatore) tot
FROM `WINWATCH` WHERE
`Centrale` != 'UC' AND
`Evento` NOT REGEXP '(DISINSER|INSER|INIZIO|FINE|RISULTATO|ATTIVAZIONE)' AND
`Messaggio` NOT REGEXP '(RIPOSO|VISUAL|GEICO|ADMIN)'
GROUP BY DateOnly,Centrale,Evento,Messaggio
ORDER BY DateOnly DESC;

CREATE VIEW `CRITICAL_SERCHIO` AS
SELECT
DATE(Data) DateOnly,
CONCAT_WS(' ',evento,'PULSAR',centrale,Messaggio,COALESCE(seriale,''),COALESCE(Ospite,'')) Critical,
SUM(contatore) tot
FROM `SERCHIO` WHERE
`evento` NOT REGEXP '(TRANSITO EFFETTUATO|VARCO CHIUSO|VARCO NON APERTO|TASTIERA ABILITATA|ALLARMI ACQUISITI)'
GROUP BY DateOnly,centrale,evento,Messaggio
ORDER BY DateOnly DESC;

CREATE VIEW `CRITICAL` AS
SELECT * FROM CRITICAL_SERCHIO UNION SELECT * FROM CRITICAL_WINWATCH ORDER BY DateOnly DESC;

CREATE VIEW `REPORT` AS
SELECT
Data,CONCAT_WS(' ',Messaggio,'PULSAR',RIGHT(Centrale,1),Evento) Evento, contatore
FROM `WINWATCH`
UNION
SELECT
Data,CONCAT_WS(' ',evento,'PULSAR',centrale,Messaggio,COALESCE(seriale,''),COALESCE(Ospite,'')) Evento, contatore
FROM `SERCHIO`
ORDER BY WINWATCH.Data,SERCHIO.Data ASC;